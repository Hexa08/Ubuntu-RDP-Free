name: Ubuntu SSH via Ngrok

on: workflow_dispatch

jobs:
  ssh:
    runs-on: ubuntu-latest

    steps:
      - name: Setup SSH server and user
        run: |
          sudo apt update
          sudo apt install -y openssh-server wget unzip jq net-tools

          # Enable and start SSH
          sudo systemctl enable ssh
          sudo systemctl start ssh

          # Create user 'hydra' with password 'root@hydra'
          sudo useradd -m hydra
          echo "hydra:root@hydra" | sudo chpasswd
          echo "hydra" | sudo tee /etc/hostname
          sudo hostnamectl set-hostname hydra

          # Allow password login
          sudo sed -i 's/^#PasswordAuthentication yes/PasswordAuthentication yes/' /etc/ssh/sshd_config
          sudo sed -i 's/^PasswordAuthentication no/PasswordAuthentication yes/' /etc/ssh/sshd_config
          echo "PermitRootLogin yes" | sudo tee -a /etc/ssh/sshd_config
          echo "UsePAM yes" | sudo tee -a /etc/ssh/sshd_config
          echo "ChallengeResponseAuthentication no" | sudo tee -a /etc/ssh/sshd_config
          sudo systemctl restart ssh

          # Setup .bash_logout to show message when session ends
          echo 'echo "Bye, time is up!"' | sudo tee -a /home/hydra/.bash_logout
          sudo chown hydra:hydra /home/hydra/.bash_logout

      - name: Install and start Ngrok TCP tunnel
        run: |
          wget https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-stable-linux-amd64.zip
          unzip ngrok-stable-linux-amd64.zip
          sudo mv ngrok /usr/local/bin
          ngrok config add-authtoken ${{ secrets.NGROK_AUTH_TOKEN }}
          nohup ngrok tcp 22 &

      - name: Show SSH connection details
        run: |
          sleep 15
          NGROK_URL=$(curl -s http://127.0.0.1:4040/api/tunnels | jq -r '.tunnels[0].public_url')
          HOST=$(echo $NGROK_URL | sed -e 's/tcp:\/\///' | cut -d ":" -f 1)
          PORT=$(echo $NGROK_URL | cut -d ":" -f 3)
          echo ""
          echo "‚úÖ SSH Server is ready!"
          echo "------------------------------------"
          echo "üåê Host/IP: $HOST"
          echo "üîå Port:    $PORT"
          echo "üë§ User:    hydra"
          echo "üîë Pass:    root@hydra"
          echo "üìü SSH Command:"
          echo "ssh hydra@$HOST -p $PORT"
          echo "------------------------------------"

      - name: Keep Runner Alive for 8 Hours
        run: |
          echo "‚è≥ Keeping the server alive for 8 hours..."
          sleep $((60 * 60 * 8))

      - name: Run apt update before finishing
        run: |
          echo "‚è∞ Time is up! Running apt update before exit."
          sudo apt update
